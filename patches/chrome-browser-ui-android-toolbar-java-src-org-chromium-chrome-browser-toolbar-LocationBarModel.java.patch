diff --git a/chrome/browser/ui/android/toolbar/java/src/org/chromium/chrome/browser/toolbar/LocationBarModel.java b/chrome/browser/ui/android/toolbar/java/src/org/chromium/chrome/browser/toolbar/LocationBarModel.java
index 334ed755866a92b78cda5cd5aa4eadba574ff958..0d70d6c5199b740e4faeec566378b0281fcd5fb9 100644
--- a/chrome/browser/ui/android/toolbar/java/src/org/chromium/chrome/browser/toolbar/LocationBarModel.java
+++ b/chrome/browser/ui/android/toolbar/java/src/org/chromium/chrome/browser/toolbar/LocationBarModel.java
@@ -342,6 +342,9 @@ public class LocationBarModel implements ToolbarDataProvider, LocationBarDataPro
                 return buildUrlBarData(mUrlFormatter.format(originalUrl));
             }
 
+            if (mTab.getUrl().getSpec().startsWith("devtools://"))
+                return buildUrlBarData(mTab.getUrl().getSpec(), mTab.getTitle(), "");
+
             if (isOfflinePage()) {
                 GURL originalUrl = mTab.getOriginalUrl();
                 formattedUrl = UrlUtilities.stripScheme(mUrlFormatter.format(originalUrl));
@@ -585,7 +588,7 @@ public class LocationBarModel implements ToolbarDataProvider, LocationBarDataPro
 
     @Override
     public int getPageClassification(boolean isFocusedFromFakebox) {
-        if (mNativeLocationBarModelAndroid == 0) return PageClassification.INVALID_SPEC_VALUE;
+        if (mNativeLocationBarModelAndroid == 0) return PageClassification.NTP_VALUE;
 
         // Provide NTP as page class in overview mode (when Start Surface is enabled). No call
         // to the backend necessary or possible, since there is no tab or navigation entry.
@@ -610,7 +613,7 @@ public class LocationBarModel implements ToolbarDataProvider, LocationBarDataPro
     @VisibleForTesting
     @ConnectionSecurityLevel
     int getSecurityLevel(Tab tab, boolean isOfflinePage, @Nullable String publisherUrl) {
-        if (tab == null || isOfflinePage || isInOverviewAndShowingOmnibox()) {
+        if (tab == null || isOfflinePage || isInOverviewAndShowingOmnibox() ||  (!TextUtils.isEmpty(tab.getUrl().getSpec()) && (tab.getUrl().getSpec().startsWith("chrome-extension") || tab.getUrl().getSpec().startsWith("chrome") || tab.getUrl().getSpec().startsWith("devtools") || tab.getUrl().getSpec().startsWith("mises")))) {
             return ConnectionSecurityLevel.NONE;
         }
 
@@ -651,9 +654,7 @@ public class LocationBarModel implements ToolbarDataProvider, LocationBarDataPro
         }
 
         // Return early if native initialization hasn't been done yet.
-        if ((securityLevel == ConnectionSecurityLevel.NONE
-                    || securityLevel == ConnectionSecurityLevel.WARNING)
-                && mNativeLocationBarModelAndroid == 0) {
+        if (mNativeLocationBarModelAndroid == 0) {
             return R.drawable.omnibox_info;
         }
 
@@ -661,6 +662,16 @@ public class LocationBarModel implements ToolbarDataProvider, LocationBarDataPro
                 !mSearchEngineLogoUtils.shouldShowSearchEngineLogo(isIncognito())
                 || mNtpDelegate.isCurrentlyVisible() || isInOverviewAndShowingOmnibox();
 
+        String currentUrl = getCurrentUrl();
+        if (currentUrl != null && currentUrl.startsWith("chrome://"))
+            skipIconForNeutralState = true;
+        if (currentUrl != null && currentUrl.startsWith("mises://"))
+            skipIconForNeutralState = true;
+        if (currentUrl != null && currentUrl.startsWith("chrome-search://"))
+            skipIconForNeutralState = true;
+        if (currentUrl != null && currentUrl.startsWith("mises-search://"))
+            skipIconForNeutralState = true;
+
         boolean useLockIconEnabled = false;
         if (mNativeLocationBarModelAndroid != 0) {
             PrefService prefService = getPrefService();
