diff --git a/chrome/browser/download/android/java/src/org/chromium/chrome/browser/download/settings/DownloadSettings.java b/chrome/browser/download/android/java/src/org/chromium/chrome/browser/download/settings/DownloadSettings.java
index f0dcbd00aff6834e2152b18b347a0d1f218e6dd7..4c10c992b6bef1776e600a454b7db42bebf09ff3 100644
--- a/chrome/browser/download/android/java/src/org/chromium/chrome/browser/download/settings/DownloadSettings.java
+++ b/chrome/browser/download/android/java/src/org/chromium/chrome/browser/download/settings/DownloadSettings.java
@@ -22,6 +22,29 @@ import org.chromium.components.browser_ui.settings.SettingsUtils;
 import org.chromium.components.prefs.PrefService;
 import org.chromium.components.user_prefs.UserPrefs;
 
+import android.content.ComponentName;
+import android.app.Activity;
+import android.content.SharedPreferences;
+import android.os.Bundle;
+import org.chromium.base.Log;
+import android.view.View;
+import org.chromium.base.ContextUtils;
+import android.graphics.Color;
+import android.graphics.drawable.ColorDrawable;
+import android.widget.ListView;
+import android.content.Context;
+import android.widget.ListView;
+import android.content.pm.PackageManager;
+import android.content.Intent;
+import android.content.Context;
+import android.content.pm.ResolveInfo;
+import java.util.ArrayList;
+import java.util.List;
+import java.util.Locale;
+import android.net.Uri;
+import android.text.TextUtils;
+import org.chromium.components.browser_ui.settings.ChromeBaseCheckBoxPreference;
+
 /**
  * Fragment containing Download settings.
  */
@@ -35,6 +58,8 @@ public class DownloadSettings
     private ChromeSwitchPreference mLocationPromptEnabledPref;
     private ManagedPreferenceDelegate mLocationPromptEnabledPrefDelegate;
 
+    private ChromeBaseCheckBoxPreference mExternalDownloadManager;
+
     @Override
     public void onCreatePreferences(@Nullable Bundle savedInstanceState, String s) {
         getActivity().setTitle(R.string.menu_downloads);
@@ -54,6 +79,8 @@ public class DownloadSettings
         };
         mLocationPromptEnabledPref.setManagedPreferenceDelegate(mLocationPromptEnabledPrefDelegate);
         mLocationChangePref = (DownloadLocationPreference) findPreference(PREF_LOCATION_CHANGE);
+
+        mExternalDownloadManager = (ChromeBaseCheckBoxPreference) findPreference("enable_external_download_manager");
     }
 
     @Override
@@ -89,6 +116,31 @@ public class DownloadSettings
             mLocationPromptEnabledPref.setChecked(isLocationPromptEnabled);
             mLocationPromptEnabledPref.setEnabled(true);
         }
+
+        if (mExternalDownloadManager != null) {
+            mExternalDownloadManager.setOnPreferenceChangeListener(this);
+            mExternalDownloadManager.setChecked(ContextUtils.getAppSharedPreferences().getBoolean("enable_external_download_manager", false));
+            if (ContextUtils.getAppSharedPreferences().getBoolean("enable_external_download_manager", false)
+                  && !TextUtils.isEmpty(ContextUtils.getAppSharedPreferences().getString("selected_external_download_manager_package_name", ""))) {
+                mExternalDownloadManager.setSummary(ContextUtils.getAppSharedPreferences().getString("selected_external_download_manager_package_name", ""));
+            }
+        }
+    }
+
+    @Override
+    public void onActivityResult(int requestCode, int resultCode, Intent data) {
+            Log.i("Mises", "[DownloadPreferences] Received activity result, RQ: " + requestCode);
+            if (requestCode == 4242 && resultCode == Activity.RESULT_OK && data != null) {
+                 ComponentName componentName = data.getComponent();
+                 final String packageName = componentName.getPackageName();
+                 final String activityName = componentName.getClassName();
+                 Log.i("Mises", "[DownloadPreferences] Received activity result, PN: " + packageName + " - AN: " + activityName);
+                 SharedPreferences.Editor sharedPreferencesEditor = ContextUtils.getAppSharedPreferences().edit();
+                 sharedPreferencesEditor.putString("selected_external_download_manager_package_name", packageName);
+                 sharedPreferencesEditor.putString("selected_external_download_manager_activity_name", activityName);
+                 sharedPreferencesEditor.apply();
+                 updateDownloadSettings();
+            }
     }
 
     // Preference.OnPreferenceChangeListener implementation.
@@ -106,6 +158,36 @@ public class DownloadSettings
                 DownloadDialogBridge.setPromptForDownloadAndroid(DownloadPromptStatus.DONT_SHOW);
             }
         }
+        else if ("enable_external_download_manager".equals(preference.getKey())) {
+            SharedPreferences.Editor sharedPreferencesEditor = ContextUtils.getAppSharedPreferences().edit();
+            sharedPreferencesEditor.putBoolean("enable_external_download_manager", (boolean)newValue);
+            sharedPreferencesEditor.apply();
+            if ((boolean)newValue == true) {
+                    List<Intent> targetedShareIntents = new ArrayList<Intent>();
+                    Intent shareIntent = new Intent(android.content.Intent.ACTION_VIEW, Uri.parse("http://test.com/file.rar"));
+                    // Set title and text to share when the user selects an option.
+                    shareIntent.putExtra(Intent.EXTRA_TEXT, "http://test.com/file.rar");
+                    List<ResolveInfo> resInfo = getActivity().getPackageManager().queryIntentActivities(shareIntent, 0);
+                    if (!resInfo.isEmpty()) {
+                        for (ResolveInfo info : resInfo) {
+                            if (!"site.mises.browser".equalsIgnoreCase(info.activityInfo.packageName)) {
+                                Intent targetedShare = new Intent(android.content.Intent.ACTION_VIEW);
+                                targetedShare.setPackage(info.activityInfo.packageName.toLowerCase(Locale.ROOT));
+                                targetedShareIntents.add(targetedShare);
+                            }
+                        }
+                        // Then show the ACTION_PICK_ACTIVITY to let the user select it
+                        Intent intentPick = new Intent();
+                        intentPick.setAction(Intent.ACTION_PICK_ACTIVITY);
+                        // Set the title of the dialog
+                        intentPick.putExtra(Intent.EXTRA_TITLE, "Download manager");
+                        intentPick.putExtra(Intent.EXTRA_INTENT, shareIntent);
+                        intentPick.putExtra(Intent.EXTRA_INITIAL_INTENTS, targetedShareIntents.toArray());
+                        // Call StartActivityForResult so we can get the app name selected by the user
+                        this.startActivityForResult(intentPick, /* REQUEST_CODE_MY_PICK */ 4242);
+                    }
+            }
+        }
         return true;
     }
 
