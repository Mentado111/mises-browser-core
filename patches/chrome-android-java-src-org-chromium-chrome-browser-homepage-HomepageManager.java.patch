diff --git a/chrome/android/java/src/org/chromium/chrome/browser/homepage/HomepageManager.java b/chrome/android/java/src/org/chromium/chrome/browser/homepage/HomepageManager.java
index 47e346168cf3eb3be2adf9aacef86a63ed83930e..28ab73965eb6107e040ada967f9418d1550c4190 100644
--- a/chrome/android/java/src/org/chromium/chrome/browser/homepage/HomepageManager.java
+++ b/chrome/android/java/src/org/chromium/chrome/browser/homepage/HomepageManager.java
@@ -25,6 +25,8 @@ import org.chromium.components.embedder_support.util.UrlConstants;
 import org.chromium.components.embedder_support.util.UrlUtilities;
 import org.chromium.url.GURL;
 
+import org.chromium.base.ContextUtils;
+
 /**
  * Provides information regarding homepage enabled states and URI.
  *
@@ -118,8 +120,7 @@ public class HomepageManager implements HomepagePolicyManager.HomepagePolicyStat
      * @return Whether to close the app when the user has zero tabs.
      */
     public static boolean shouldCloseAppWithZeroTabs() {
-        return HomepageManager.isHomepageEnabled()
-                && !UrlUtilities.isNTPUrl(HomepageManager.getHomepageUri());
+        return ContextUtils.getAppSharedPreferences().getBoolean("close_browser_after_last_tab", false);
     }
 
     /**
@@ -200,17 +201,8 @@ public class HomepageManager implements HomepagePolicyManager.HomepagePolicyStat
      * Get homepage URI without checking if the homepage is enabled.
      * @return Homepage URI based on policy and shared preference settings.
      */
-    private @NonNull String getHomepageUriIgnoringEnabledState() {
-        if (HomepagePolicyManager.isHomepageManagedByPolicy()) {
-            return HomepagePolicyManager.getHomepageUrl().getSpec();
-        }
-        if (getPrefHomepageUseChromeNTP()) {
-            return UrlConstants.NTP_NON_NATIVE_URL;
-        }
-        if (getPrefHomepageUseDefaultUri()) {
-            return getDefaultHomepageUri();
-        }
-        return getPrefHomepageCustomUri();
+    public @NonNull String getHomepageUriIgnoringEnabledState() {
+        return ContextUtils.getAppSharedPreferences().getString("active_homepage", UrlConstants.NTP_NON_NATIVE_URL);
     }
 
     /**
