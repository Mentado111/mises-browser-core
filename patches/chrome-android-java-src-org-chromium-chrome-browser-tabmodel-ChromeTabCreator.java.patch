diff --git a/chrome/android/java/src/org/chromium/chrome/browser/tabmodel/ChromeTabCreator.java b/chrome/android/java/src/org/chromium/chrome/browser/tabmodel/ChromeTabCreator.java
index bb26737fd0f9d4fe702d8a422fe370af6d73ba9c..4c2256d98f4aef93da9eeba30f88cdd044a5c7a3 100644
--- a/chrome/android/java/src/org/chromium/chrome/browser/tabmodel/ChromeTabCreator.java
+++ b/chrome/android/java/src/org/chromium/chrome/browser/tabmodel/ChromeTabCreator.java
@@ -40,6 +40,10 @@ import org.chromium.content_public.browser.WebContents;
 import org.chromium.ui.base.PageTransition;
 import org.chromium.ui.base.WindowAndroid;
 import org.chromium.url.GURL;
+import android.animation.ValueAnimator;
+import org.chromium.chrome.browser.mises.MisesController;
+import org.chromium.chrome.browser.tab.TabSelectionType;
+import org.chromium.chrome.browser.homepage.HomepageManager;
 
 /**
  * This class creates various kinds of new tabs and adds them to the right {@link TabModel}.
@@ -142,6 +146,7 @@ public class ChromeTabCreator extends TabCreator {
             return null;
         }
         try {
+            setDurationScale(0.0f);
             TraceEvent.begin("ChromeTabCreator.createNewTab");
             int parentId = parent != null ? parent.getId() : Tab.INVALID_TAB_ID;
 
@@ -237,6 +242,7 @@ public class ChromeTabCreator extends TabCreator {
                 creationState = TabCreationState.LIVE_IN_BACKGROUND;
             }
             mTabModel.addTab(tab, position, type, creationState);
+            setDurationScale(0.6f);
             return tab;
         } finally {
             TraceEvent.end("ChromeTabCreator.createNewTab");
@@ -249,6 +255,7 @@ public class ChromeTabCreator extends TabCreator {
         // The parent tab was already closed.  Do not open child tabs.
         int parentId = parent != null ? parent.getId() : Tab.INVALID_TAB_ID;
         if (mTabModel.isClosurePending(parentId)) return false;
+        setDurationScale(0.0f);
 
         // If parent is in the same tab model, place the new tab next to it.
         int position = TabModel.INVALID_TAB_INDEX;
@@ -273,6 +280,7 @@ public class ChromeTabCreator extends TabCreator {
                 : ((type == TabLaunchType.FROM_RECENT_TABS) ? TabCreationState.FROZEN_FOR_LAZY_LOAD
                                                             : TabCreationState.LIVE_IN_BACKGROUND);
         mTabModel.addTab(tab, position, type, creationState);
+        setDurationScale(0.6f);
         return true;
     }
 
@@ -491,4 +499,30 @@ public class ChromeTabCreator extends TabCreator {
     public void setWindowAndroid(WindowAndroid window) {
         mNativeWindow = window;
     }
+
+    private void setDurationScale(float duration) {
+        try {
+            ValueAnimator.class.getMethod("setDurationScale", float.class).invoke(null, duration);
+        } catch (Throwable t) {
+        }    
+    }
+
+    @Override
+    public void openSinglePage(String url) {
+        try {
+            TraceEvent.begin("TabCreator.openSinglePage");
+
+            for (int i=0; i<mTabModel.getCount(); i++) {
+                String pageurl = mTabModel.getTabAt(i).getUrl().getSpec();
+                if (pageurl.indexOf(url) != -1) {
+                    mTabModel.setIndex(i, TabSelectionType.FROM_USER, false);
+                    return;
+                }
+            }
+            launchUrl(url, TabLaunchType.FROM_CHROME_UI);
+        } finally {
+            TraceEvent.end("TabCreator.openSinglePage");
+        }
+    }
+
 }
