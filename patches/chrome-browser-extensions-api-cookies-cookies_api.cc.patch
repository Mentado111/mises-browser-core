diff --git a/chrome/browser/extensions/api/cookies/cookies_api.cc b/chrome/browser/extensions/api/cookies/cookies_api.cc
index d97c8fd1ecbd58d3ea57366f1db52d010da21718..9c55e6ffaa3d587e8d1846a962b27fd90282f307 100644
--- a/chrome/browser/extensions/api/cookies/cookies_api.cc
+++ b/chrome/browser/extensions/api/cookies/cookies_api.cc
@@ -40,6 +40,7 @@
 #include "net/cookies/canonical_cookie.h"
 #include "net/cookies/cookie_constants.h"
 #include "services/network/public/mojom/network_service.mojom.h"
+#include "components/safe_browsing/buildflags.h"
 
 using content::BrowserThread;
 
@@ -295,11 +296,13 @@ void CookiesGetFunction::NotifyExtensionTelemetry() {
     return;
   }
 
+#if BUILDFLAG(FULL_SAFE_BROWSING)
   auto cookies_get_signal = std::make_unique<safe_browsing::CookiesGetSignal>(
       extension_id(), parsed_args_->details.name,
       parsed_args_->details.store_id.value_or(std::string()),
       parsed_args_->details.url);
   telemetry_service->AddSignal(std::move(cookies_get_signal));
+#endif
 }
 
 CookiesGetAllFunction::CookiesGetAllFunction() {
@@ -386,7 +389,7 @@ void CookiesGetAllFunction::NotifyExtensionTelemetry() {
           safe_browsing::kExtensionTelemetryCookiesGetAllSignal)) {
     return;
   }
-
+#if BUILDFLAG(FULL_SAFE_BROWSING)
   auto cookies_get_all_signal =
       std::make_unique<safe_browsing::CookiesGetAllSignal>(
           extension_id(), parsed_args_->details.domain.value_or(std::string()),
@@ -397,6 +400,7 @@ void CookiesGetAllFunction::NotifyExtensionTelemetry() {
           parsed_args_->details.url.value_or(std::string()),
           parsed_args_->details.session.value_or(false));
   telemetry_service->AddSignal(std::move(cookies_get_all_signal));
+#endif
 }
 
 CookiesSetFunction::CookiesSetFunction()
